{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "REST API",
    "description": ""
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [],
  "schemes": [
    "http"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/ong": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "post ong object",
            "in": "body",
            "description": "New ong values",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "new ong"
                },
                "description": {
                  "type": "string",
                  "example": "ong description"
                },
                "email": {
                  "type": "string",
                  "example": "aaa@aaa.com"
                },
                "phone": {
                  "type": "string",
                  "example": "(19) 99999-9999"
                }
              },
              "required": [
                "name",
                "description",
                "email",
                "phone"
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/ong/{id}": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "put ong object",
            "in": "body",
            "description": "New ong values",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "new ong"
                },
                "description": {
                  "type": "string",
                  "example": "ong description"
                },
                "email": {
                  "type": "string",
                  "example": "aaa@aaa.com"
                },
                "phone": {
                  "type": "string",
                  "example": "(19) 99999-9999"
                }
              },
              "required": [
                "name",
                "description",
                "email",
                "phone"
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "patch": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "patch ong object",
            "in": "body",
            "description": "New ong values",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "new ong"
                },
                "description": {
                  "type": "string",
                  "example": "ong description"
                },
                "email": {
                  "type": "string",
                  "example": "aaa@aaa.com"
                },
                "phone": {
                  "type": "string",
                  "example": "(19) 99999-9999"
                }
              },
              "required": [
                "name",
                "description",
                "email",
                "phone"
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/medicines": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "post medicines object",
            "in": "body",
            "description": "New medicines values",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "new medicine"
                },
                "manufacturer": {
                  "type": "string",
                  "example": "the manufacturer"
                },
                "prescription": {
                  "type": "string",
                  "example": "false or true"
                },
                "amount": {
                  "type": "string",
                  "example": "amount of medicine"
                },
                "expiration_date": {
                  "type": "string",
                  "example": "dd/mm/yyyy"
                },
                "batch": {
                  "type": "string",
                  "example": "batch here"
                }
              },
              "required": [
                "name",
                "manufacturer",
                "prescription",
                "amount",
                "expiration_date",
                "batch"
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/medicines/{id}": {
      "delete": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/expenses": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "post expenses object",
            "in": "body",
            "description": "New expenses values",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "new expense"
                },
                "amount": {
                  "type": "string",
                  "example": "the amount"
                },
                "recurrent": {
                  "type": "string",
                  "example": "false or true"
                },
                "destination": {
                  "type": "string",
                  "example": "the destination"
                },
                "status": {
                  "type": "string",
                  "example": "Pago or Nao Pago"
                },
                "due_date": {
                  "type": "string",
                  "example": "YYYY/MM/DD"
                },
                "pay_date": {
                  "type": "string",
                  "example": "YYYY/MM/DD"
                },
                "value": {
                  "type": "string",
                  "example": "the value (float)"
                }
              },
              "required": [
                "name",
                "amount",
                "recurrent",
                "destination",
                "status",
                "due_date",
                "pay_date",
                "value"
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/expenses/{id}": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "put expenses object",
            "in": "body",
            "description": "New expenses values",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "new expense"
                },
                "amount": {
                  "type": "string",
                  "example": "the amount"
                },
                "recurrent": {
                  "type": "string",
                  "example": "false or true"
                },
                "destination": {
                  "type": "string",
                  "example": "the destination"
                },
                "status": {
                  "type": "string",
                  "example": "Pago or Nao Pago"
                },
                "due_date": {
                  "type": "string",
                  "example": "YYYY/MM/DD"
                },
                "pay_date": {
                  "type": "string",
                  "example": "YYYY/MM/DD"
                },
                "value": {
                  "type": "string",
                  "example": "the value (float)"
                }
              },
              "required": [
                "name",
                "amount",
                "recurrent",
                "destination",
                "status",
                "due_date",
                "pay_date",
                "value"
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "patch": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "patch expenses object",
            "in": "body",
            "description": "New expenses values",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "new expense"
                },
                "amount": {
                  "type": "string",
                  "example": "the amount"
                },
                "recurrent": {
                  "type": "string",
                  "example": "false or true"
                },
                "destination": {
                  "type": "string",
                  "example": "the destination"
                },
                "status": {
                  "type": "string",
                  "example": "Pago or Nao Pago"
                },
                "due_date": {
                  "type": "string",
                  "example": "YYYY/MM/DD"
                },
                "pay_date": {
                  "type": "string",
                  "example": "YYYY/MM/DD"
                },
                "value": {
                  "type": "string",
                  "example": "the value (float)"
                }
              },
              "required": [
                "name",
                "amount",
                "recurrent",
                "destination",
                "status",
                "due_date",
                "pay_date",
                "value"
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "definitions": {}
}